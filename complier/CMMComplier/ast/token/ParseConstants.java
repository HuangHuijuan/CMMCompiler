/* Generated By:JJTree&JavaCC: Do not edit this line. ParseConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParseConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ASSIGN = 7;
  /** RegularExpression Id. */
  int GT = 8;
  /** RegularExpression Id. */
  int LT = 9;
  /** RegularExpression Id. */
  int EQ = 10;
  /** RegularExpression Id. */
  int LE = 11;
  /** RegularExpression Id. */
  int GE = 12;
  /** RegularExpression Id. */
  int NE = 13;
  /** RegularExpression Id. */
  int AND = 14;
  /** RegularExpression Id. */
  int OR = 15;
  /** RegularExpression Id. */
  int COMMA = 16;
  /** RegularExpression Id. */
  int BOOLEAN = 17;
  /** RegularExpression Id. */
  int CHAR = 18;
  /** RegularExpression Id. */
  int INT = 19;
  /** RegularExpression Id. */
  int REAL = 20;
  /** RegularExpression Id. */
  int PLUS = 21;
  /** RegularExpression Id. */
  int MINUS = 22;
  /** RegularExpression Id. */
  int MULTIPLY = 23;
  /** RegularExpression Id. */
  int DIVIDE = 24;
  /** RegularExpression Id. */
  int MOD = 25;
  /** RegularExpression Id. */
  int INTEGER = 26;
  /** RegularExpression Id. */
  int STRING = 27;
  /** RegularExpression Id. */
  int DOUBLE = 28;
  /** RegularExpression Id. */
  int DIGIT = 29;
  /** RegularExpression Id. */
  int BREAK = 30;
  /** RegularExpression Id. */
  int ELSE = 31;
  /** RegularExpression Id. */
  int WHILE = 32;
  /** RegularExpression Id. */
  int IF = 33;
  /** RegularExpression Id. */
  int TRUE = 34;
  /** RegularExpression Id. */
  int FALSE = 35;
  /** RegularExpression Id. */
  int WRITE = 36;
  /** RegularExpression Id. */
  int READ = 37;
  /** RegularExpression Id. */
  int END = 38;
  /** RegularExpression Id. */
  int LC = 39;
  /** RegularExpression Id. */
  int RC = 40;
  /** RegularExpression Id. */
  int LM = 41;
  /** RegularExpression Id. */
  int RM = 42;
  /** RegularExpression Id. */
  int LB = 43;
  /** RegularExpression Id. */
  int RB = 44;
  /** RegularExpression Id. */
  int ID = 45;
  /** RegularExpression Id. */
  int LETTER = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "<NE>",
    "\"&&\"",
    "\"||\"",
    "\",\"",
    "\"boolean\"",
    "\"char\"",
    "\"int\"",
    "\"real\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "<INTEGER>",
    "<STRING>",
    "<DOUBLE>",
    "<DIGIT>",
    "\"break\"",
    "\"else\"",
    "\"while\"",
    "\"if\"",
    "\"true\"",
    "\"false\"",
    "\"write\"",
    "\"read\"",
    "\"end\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "<ID>",
    "<LETTER>",
    "\";\"",
  };

}
